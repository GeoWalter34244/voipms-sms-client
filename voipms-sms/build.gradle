apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 32
    buildToolsVersion "32.0.0"
    defaultConfig {
        applicationId "net.kourlas.voipms_sms"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 144
        versionName "0.6.23"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation": "$projectDir/schemas".toString(),
                    "room.incremental": "true",
                ]
            }
        }
    }
    flavorDimensions "version", "demo"
    productFlavors {
        primary {
            dimension "version"
            buildConfigField "boolean", "IS_FDROID", "false"
        }
        fdroid {
            dimension "version"
            versionNameSuffix "-fdroid"
            buildConfigField "boolean", "IS_FDROID", "true"
        }
        full {
            dimension "demo"
            buildConfigField "boolean", "IS_DEMO", "false"
            buildConfigField "boolean", "IS_DEMO_SENDING", "false"
        }
        demoNotSending {
            dimension "demo"
            applicationId "net.kourlas.voipms_sms.demo"
            buildConfigField "boolean", "IS_DEMO", "true"
            buildConfigField "boolean", "IS_DEMO_SENDING", "false"
            versionNameSuffix "-demo"
        }
        demoSending {
            dimension "demo"
            applicationId "net.kourlas.voipms_sms.demo"
            buildConfigField "boolean", "IS_DEMO", "true"
            buildConfigField "boolean", "IS_DEMO_SENDING", "true"
            versionNameSuffix "-demo"
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name
        def isDemo = (names.contains("demoSending")
                      || names.contains("demoNotSending"))
        def isRelease = variant.buildType.name == "release"
        def isPrimary = names.contains("primary")
        if (isDemo && (isPrimary || isRelease)) {
            variant.setIgnore(true)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.0"
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        primary.java.srcDirs += "src/primary/kotlin"
        fdroid.java.srcDirs += "src/fdroid/kotlin"
    }
    lint {
        abortOnError false
    }
}

dependencies {
    def room_version = "2.4.3"
    def moshi_version = "1.13.0"

    // Kotlin libraries
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    // Android support libraries
    implementation "androidx.annotation:annotation:1.4.0"
    implementation "androidx.appcompat:appcompat:1.5.0"
    implementation "androidx.compose.ui:ui:1.2.1"
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.preference:preference-ktx:1.2.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.sharetarget:sharetarget:1.2.0-rc02"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation "com.google.android.material:material:1.6.1"
    kapt "androidx.room:room-compiler:$room_version"

    // Firebase libraries
    primaryImplementation platform("com.google.firebase:firebase-bom:29.0.4")
    primaryImplementation "com.google.firebase:firebase-analytics-ktx"
    primaryImplementation "com.google.firebase:firebase-appindexing"
    primaryImplementation "com.google.firebase:firebase-crashlytics-ktx"
    primaryImplementation "com.google.firebase:firebase-messaging-ktx"

    // Google Play libraries
    primaryImplementation "com.android.billingclient:billing-ktx:5.0.0"

    // Other third-party libraries
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation "com.takisoft.preferencex:preferencex-datetimepicker:1.1.0"
    implementation "com.takisoft.preferencex:preferencex-ringtone:1.1.0"
    implementation "com.takisoft.preferencex:preferencex:1.1.0"
    implementation "de.adorsys.android:securestoragelibrary:1.2.4"
    implementation "com.github.mukeshsolanki:MarkdownView-Android:2.0.0"
    implementation "com.github.xabaras:RecyclerViewSwipeDecorator:1.3"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
}

tasks.whenTaskAdded {task ->
    if (task.name.contains("Fdroid")
        && (task.name.contains("GoogleServices")
            || task.name.contains("Crashlytics")))
    {
        task.enabled = false
    }
}

task cleanAssets(type: Delete) {
    delete 'src/main/assets'
}

task copyToAssets(type: Copy) {
    from '../PRIVACY.md'
    from '../CHANGES.md'
    from '../NOTICE'
    from '../LICENSE.md'
    from '../HELP.md'
    into 'src/main/assets'
}

preBuild.dependsOn copyToAssets
copyToAssets.dependsOn cleanAssets

apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
